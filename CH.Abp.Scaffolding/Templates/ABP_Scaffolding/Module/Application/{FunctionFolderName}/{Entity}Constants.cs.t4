<#@ template language="C#" HostSpecific="True" Debug="False" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Linq" #>
<#@ ScaffoldingAssembly Processor="ScaffoldingAssemblyLoader" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Microsoft.AspNet.Scaffolding.Core.Metadata" #>
<#@ import namespace="CH.Abp.Scaffolding.Models" #>
<#@ parameter type="System.String" name="ModuleNamespace" #>
<#@ parameter type="System.String" name="ModuleName" #>
<#@ parameter type="System.String" name="EntityName" #>
<#@ parameter type="System.String" name="FunctionName" #>
<#@ parameter type="System.String" name="ProjectName" #>
<#@ parameter type="System.Boolean" name="AllowBatchDelete" #>
<#@ parameter type="System.Boolean" name="IsDisplayOrderable" #>
<#@ parameter type="CH.Abp.Scaffolding.Models.MetaTableInfo" name="DtoMetaTable" #>
<#@ Include File="../../../CSharpHelpers.t4" #>
<#@ output extension="cs" #>
<#
    var entityName = ToCamelCase(EntityName);
	 var moduleName = ToCamelCase(ModuleName);
#>

        /*

		TODO:★请将以下内容剪切到 PermissionNames
        public const string <#= ModuleName #>_<#= EntityName #> = "<#= ModuleName #>.<#= EntityName #>";
        public const string <#= ModuleName #>_<#= EntityName #>_Create = "<#= ModuleName #>.<#= EntityName #>.Create";
        public const string <#= ModuleName #>_<#= EntityName #>_Update = "<#= ModuleName #>.<#= EntityName #>.Update";
        public const string <#= ModuleName #>_<#= EntityName #>_Delete = "<#= ModuleName #>.<#= EntityName #>.Delete";

		TODO:★请将以下内容剪切到 AuthorizationProvider
         //<#= FunctionName #>
		 var <#= moduleName #> = context.GetPermissionOrNull(PermissionNames.<#= ModuleName #>_<#= EntityName #>);
         if (<#= moduleName #> == null)
         {
             <#= moduleName #> = context.CreatePermission(PermissionNames.<#= ModuleName #>_<#= EntityName #>, L("<#= FunctionName #>"), multiTenancySides: MultiTenancySides.Tenant);
         }
        
         <#= moduleName #>.CreateChildPermission(PermissionNames.<#= ModuleName #>_<#= EntityName #>_Create, L("添加"));
         <#= moduleName #>.CreateChildPermission(PermissionNames.<#= ModuleName #>_<#= EntityName #>_Update, L("修改"));
         <#= moduleName #>.CreateChildPermission(PermissionNames.<#= ModuleName #>_<#= EntityName #>_Delete, L("删除"));

		 TODO:★请将以下内容剪切到Web站点Spartan.xml
		  //<#= FunctionName #>
	     <text name="<#= FunctionName #>" value="<#= FunctionName #>" />

		*/
